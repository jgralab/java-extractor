module java/member/Modifiers
  
symbol tables
	modifiers2Modifier<Modifier>

global actions 
	pattern _ -> Modifier #
		$ = modifiers2Modifier.use($0);
		{
			if (#$# == null) {#
				$ = Modifier();
				$.type = $0;
				modifiers2Modifier.declare($0, $);
			#} else {
				getPositionsMap().put((Vertex) #$#, currentElement.getPosition());
			}
		}
	#
	
exports
  sorts Public Private Protected Abstract Final Static Native Transient Volatile Synchronized StrictFP Modifier

  context-free syntax
    rule "public"       -> Public #$ = Modifiers.PUBLIC;#
    rule "private"      -> Private #$ = Modifiers.PRIVATE;#
    rule "protected"    -> Protected #$ = Modifiers.PROTECTED;#

    rule "abstract"     -> Abstract #$ = Modifiers.ABSTRACT;#
    rule "final"        -> Final #$ = Modifiers.FINAL;#
    rule "static"       -> Static #$ = Modifiers.STATIC;#
    rule "native"       -> Native #$ = Modifiers.NATIVE;#
    rule "transient"    -> Transient #$ = Modifiers.TRANSIENT;#
    rule "volatile"     -> Volatile #$ = Modifiers.VOLATILE;#
    rule "synchronized" -> Synchronized #$ = Modifiers.SYNCHRONIZED;#
    rule "strictfp"     -> StrictFP #$ = Modifiers.STRICTFP;#

    rule Public       -> Modifier
    rule Private      -> Modifier
    rule Protected    -> Modifier
    rule Abstract     -> Modifier
    rule Final        -> Modifier
    rule Static       -> Modifier
    rule Native       -> Modifier
    rule Transient    -> Modifier
    rule Volatile     -> Modifier
    rule Synchronized -> Modifier
    rule StrictFP     -> Modifier
